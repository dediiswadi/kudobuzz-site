---
import '../styles/global.css';
import { menuItems } from "../data/menuItems.js";
---

<nav class="navbar">
  <!-- Logo -->
  <a href="/" class="navbar-logo">
    <img src="/assets/kudobuzz-logo.svg" alt="Kudobuzz Logo" />
  </a>

  <!-- Hamburger Icon (Mobile) -->
  <button id="hamburger" class="hamburger" aria-label="Menu">
    <span></span><span></span><span></span>
  </button>

  <!-- Desktop Menu -->
  <ul class="navbar-menu">
    {menuItems.map((item) => (
      <li class={item.children ? "has-dropdown" : ""}>
        <a
          href={item.link ?? "#"}
          target={item.target}
          rel={item.target === "_blank" ? "noopener noreferrer" : undefined}
        >
          {item.label}
        </a>

        {item.children && (
          <div class="dropdown">
            <div class="dropdown-grid">
              {item.children.map((child) => (
                <a
                  href={child.link ?? "#"}
                  target={child.target}
                  rel={child.target === "_blank" ? "noopener noreferrer" : undefined}
                  class="dropdown-item"
                >
                  {child.icon && <img src={child.icon} alt={child.title} loading="lazy" decoding="async" width="40" height="40" />}
                  <div>
                    <h4>{child.title}</h4>
                    {child.description && <p>{child.description}</p>}
                  </div>
                </a>
              ))}
            </div>
          </div>
        )}
      </li>
    ))}
  </ul>

  <!-- Buttons (Desktop) -->
  <div class="navbar-buttons">
    <a href="https://dashboard.kudobuzz.com/signup" target="blank" class="btn-primary">Try Kudobuzz Free</a>
    <a href="https://dashboard.kudobuzz.com/login" target="blank" class="btn-outline">Log in</a>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="mobile-menu">
    <button id="mobile-close" class="mobile-close" aria-label="Close menu">âœ•</button>
    <ul>
      {menuItems.map((item) => (
        <li>
          {item.children ? (
            <div class="mobile-group">
              <div class="mobile-group-title">{item.label}</div>
              <div class="mobile-group-links">
                {item.children.map((child) => (
                  <a
                    href={child.link ?? "#"}
                    target={child.target}
                    rel={child.target === "_blank" ? "noopener noreferrer" : undefined}
                  >
                    {child.title}
                  </a>
                ))}
              </div>
            </div>
          ) : (
            <a
              href={item.link ?? "#"}
              target={item.target}
              rel={item.target === "_blank" ? "noopener noreferrer" : undefined}
            >
              {item.label}
            </a>
          )}
        </li>
      ))}
    </ul>

    <div class="mobile-buttons">
      <a href="https://dashboard.kudobuzz.com/signup" class="btn-primary">Try Kudobuzz Free</a>
      <a href="https://dashboard.kudobuzz.com/login" class="btn-outline">Log in</a>
    </div>
  </div>
</nav>

<!-- JS untuk toggle menu -->
<script>
  const hamburger = document.getElementById("hamburger");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileClose = document.getElementById("mobile-close");

  hamburger?.addEventListener("click", () => {
    mobileMenu.classList.toggle("open");
  });

  mobileClose?.addEventListener("click", () => {
    mobileMenu.classList.remove("open");
  });

  // No accordion on mobile; show groups expanded

  // Scroll reveal for [data-animate] elements
  (function setupReveal(){
    const run = () => {
    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const els = document.querySelectorAll('[data-animate]');
    if (!els.length) return;

    if (prefersReduced) {
      els.forEach(el => el.classList.add('is-visible'));
      return;
    }

    // Stagger: for any container marked data-stagger, set --sr-delay on children
    document.querySelectorAll('[data-stagger]').forEach(container => {
      const step = Number(container.getAttribute('data-stagger')) || 70; // ms
      const children = container.querySelectorAll('[data-animate]');
      children.forEach((el, i) => {
        el.style.setProperty('--sr-delay', `${i * step}ms`);
      });
    });

    const io = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('is-visible');
        } else {
          entry.target.classList.remove('is-visible');
        }
      });
    }, { threshold: 0.15, rootMargin: '0px 0px -10% 0px' });

    els.forEach(el => io.observe(el));
    };
    if ('requestIdleCallback' in window) {
      requestIdleCallback(run);
    } else {
      setTimeout(run, 0);
    }
  })();
</script>

<style>
/* ==== Base Navbar ==== */
.navbar {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px var(--page-padding);
  width: min(100%, var(--container-max));
  margin: 0 auto;
  box-sizing: border-box;
}
.navbar-logo img { width: 160px; }

.navbar-menu {
  display: flex;
  gap: 32px;
  list-style: none;
  margin: 0;
  padding: 0;
}
.navbar-menu a {
  text-decoration: none;
  color: #1a1a1a;
  font-size: 16px;
  font-weight: 500;
  border-radius:16px;
}
.navbar-buttons {
  display: flex;
  gap: 12px;
}
/* Buttons use global .btn-primary / .btn-outline */

/* ==== Dropdown Desktop ==== */
.has-dropdown { position: relative; }
.dropdown {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translate(-50%, 4px);
  border-radius: 16px;
  width: min(90vw, 800px);
  padding: 12px 16px 24px;
  z-index: 99;
  opacity: 0;
  visibility: hidden;
  transition: opacity .18s ease, transform .18s ease, visibility .18s ease;
}
.has-dropdown:hover .dropdown { opacity: 1; visibility: visible; transform: translate(-50%, 12px); }
.has-dropdown:hover > a { color:#EE8E39; }
.navbar-menu a:hover { color:#EE8E39; }

.dropdown-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 24px;
  background: white;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  padding: 24px;
  border-radius: 20px;
}
.dropdown-item {
  display: flex;
  gap: 12px;
  padding:8px;
}
.dropdown-item img {
  width: 40px;
  height: 40px;
  background: #fce8da;
  padding: 8px;
  border-radius: 12px;
}
.dropdown-item h4 {
  margin: 0;
  font-size: 16px;
  font-weight: 600;
}
.dropdown-item p {
  margin: 4px 0 0;
  line-height: 20px;
  font-size: 14px;
  color: #666;
}
.dropdown-item:hover { background:#f8f8f8; }

/* ==== Hamburger (Mobile) ==== */
.hamburger {
  display: none;
  flex-direction: column;
  gap: 5px;
  background: none;
  border: none;
}
.hamburger span {
  display: block;
  width: 24px;
  height: 3px;
  background: #1a1a1a;
}

/* ==== Mobile Menu ==== */
.mobile-menu {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  background: #fff;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 40px 20px;
  z-index: 999;
  opacity: 0;
  pointer-events: none;
  transition: opacity .18s ease;
}
.mobile-menu.open { display: flex; opacity: 1; pointer-events: auto; }

.mobile-close {
  position: absolute;
     top: 36px;
    right: 56px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 1px solid #e5e7eb;
  background: #fff;
  cursor: pointer;
  font-size: 20px;
  line-height: 1;
}

.mobile-menu ul {
  list-style: none;
  padding: 0;
  margin: 0 0 24px 0;
  flex-direction: column;
  display: flex;
  align-items: center;
  gap: 16px;
}
.mobile-menu a { text-decoration: none; font-size: 18px; text-align:center;}
.mobile-menu a:not(.btn-primary):not(.btn-outline) { color: #1a1a1a; }

.mobile-buttons {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-top: 8px;
  width: min(420px, 90%);
}

/* Mobile groups (no accordion) */
.mobile-group { width: 100%; max-width: 520px; }
.mobile-group-title {
  font-weight: 700;
  color: #b9b9b9;
    margin: 18px 0;
  text-align: center;
}
.mobile-group-links {
  display: flex;
  flex-direction: column;
  gap: 16px;
  align-items: center;
}

/* ==== Responsive ==== */
@media (max-width: 1024px) {
  .navbar { padding: 16px clamp(16px, 5vw, 40px); }
  .navbar-menu, .navbar-buttons { display: none; }
  .hamburger { display: flex; }
}
@media (max-width: 768px) {
  .navbar-menu, .navbar-buttons { display: none; }
  .hamburger { display: flex; }
  .mobile-buttons{
    width:unset;
  }
  .mobile-group-links{
    gap: 16px; 
  }
}
</style>
